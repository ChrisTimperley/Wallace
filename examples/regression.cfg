type: algorithm/simple_evolutionary_algorithm

evaluator<evaluator/regression>: {}

termination:
  iterations<criterion/iterations>:
    limit: 1000

_my_species<species/simple>:
  fitness<fitness/scalar>: { of: Float64, maximise: false }
  representation<representation/koza_tree>: 
    min_depth: 1
    max_depth: 18
    inputs: ["x::Float64"]
    terminals: ["x::Float64"]
    non_terminals:
      - "add(x::Float64, y::Float64)::Float64 = x + y"
      - "sub(x::Float64, y::Float64)::Float64 = x - y"
      - "mul(x::Float64, y::Float64)::Float64 = x * y"
  
_my_breeder<breeder/simple>:
  selection<selection/tournament>: { size: 7 }
  mutation<mutation/subtree>: { rate: 0.01 }
  crossover<crossover/subtree>: { rate: 0.9 }

population<population/simple>:
  size: 100
  species:  $(_my_species)
  breeder:  $(_my_breeder)
