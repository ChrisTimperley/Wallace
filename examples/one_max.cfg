type: algorithm/simple_evolutionary_algorithm

evaluator<evaluator/simple>:
  objective: fitness(scheme, sum(get(i.genome)))

termination:
  iterations<criterion/iterations>: { limit: 1000 }

_my_species<species/simple>:
  fitness<fitness/scalar>: { of: Int64, maximise: True }
  representation<representation/bit_vector>: { length: 100 }

_my_breeder<breeder/simple>:
  selection<selection/tournament>: { size: 2 }
  crossover<crossover/one_point>: { rate: 1.0 }
  mutation<mutation/bit_flip>: { rate: 0.1 }

population<population/simple>:
  size:     100
  breeder:  $(_my_breeder)
  species:  $(_my_species)
