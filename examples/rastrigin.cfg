type: algorithm/simple_evolutionary_algorithm

evaluator<evaluator/simple>:
  objective: |
    f = 1000.0
    for x in get(i.genome)
      f += x*x - 10.0 * cos(2.0 * pi * x)
    end
    fitness(scheme, f)

termination:
  iterations<criterion/iterations>: { limit: 1000 }

_my_species<species/simple>:
  fitness<fitness/scalar>: { of: Float64, maximise: false }
  representation<representation/float_vector>: { length: 100, min: -5.12, max: 5.12 }
  
_my_breeder<breeder/fast>:
  sources:
    s<selection>:
      operator<selection/tournament>: { size: 2 }
    x<variation>:
      operator<crossover/one_point>: { rate: 1.0 }
      source: s
    m<variation>:
      operator<mutation/gaussian>: { rate: 0.01, mean: 0.0, std: 1.0  }
      source: x

population<population/simple>:
  size:     100
  species:  $(_my_species)
  breeder:  $(_my_breeder)
