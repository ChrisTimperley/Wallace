type: algorithm/simple_evolutionary_algorithm

evaluator<evaluator/simple>:
  objective: |
    "SimpleFitness{Int}(true, sum(i.bits.value))"

replacement<replacement/generational>: { elitism: 0 }

termination:
  iterations<criterion/iterations>: { limit: 100 }

_my_species:
  fitness: "SimpleFitness{Int}"
  stages:
    bits:
      representation<representation/bit_vector>: { length: 800 }
    codons:
      lamarckian: True
      from: bits
      representation<representation/int_vector>: { length: 100 }
    derivation:
      from: codons
      representation<representation/grammar_derivation>:
        grammar:
          root: str
          rules:
            str:  ["<c><str>", "<c>"]
            c:    ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r",
                  "s","t","u","v","w","x","y","z"]
            e:    ["<e><op><e>", "(<e><op><e>)", "<var>"]
            op:   ["+", "-", "*", "/"]
            var:  ["x", "1.0"] 
  
_my_breeder<breeder/fast>:
  sources:
    s<selection>:
      operator<selection/tournament>: { size: 2 }
    x<variation>:
      source: s
      stage:  codons
      operator<crossover/one_point>: { rate: 1.0 }
    m<variation>:
      source: x
      stage:  codons
      operator<mutation/uniform>: { rate: 0.01, min: 0, max: 1 }

population:
  demes:
    - capacity: 100
      species:  $(_my_species)
      breeder:  $(_my_breeder)
